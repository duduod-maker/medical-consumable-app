generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(cuid())
  email            String        @unique
  password         String
  role             Role          @default(USER)
  name             String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  orders           Order[]
  assignedProducts UserProduct[]

  @@map("users")
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]

  @@map("categories")
}

model Product {
  id            String       @id @default(cuid())
  name          String
  reference     String?
  description   String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  categoryId    String
  price         Float        @default(0.0)
  supplierRef   String?
  orderItems    OrderItem[]
  category      Category     @relation(fields: [categoryId], references: [id])
  assignedUsers UserProduct?

  @@map("products")
}

model Order {
  id        String      @id @default(cuid())
  status    OrderStatus @default(PENDING)
  notes     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String
  items     OrderItem[]
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(cuid())
  quantity  Int
  orderId   String
  productId String?
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model UserProduct {
  id         String   @id @default(cuid())
  assignedAt DateTime @default(now())
  notes      String?
  userId     String
  productId  String   @unique
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_products")
}

model Setting {
  id    String @id @default(cuid())
  key   String @unique
  value String

  @@map("settings")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  IN_PREPARATION
  DELIVERED
}
